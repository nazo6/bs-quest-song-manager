// This file was generated by [rspc](https://github.com/oscartbeaumont/rspc). Do not edit this file manually.

export type Procedures = {
    queries: 
        { key: "config.get", input: never, result: Config } | 
        { key: "level.get_all", input: never, result: Level[] } | 
        { key: "playlist.get_all", input: never, result: Playlist[] },
    mutations: 
        { key: "config.reset", input: never, result: null } | 
        { key: "config.set", input: Config, result: null } | 
        { key: "level.clear", input: never, result: null } | 
        { key: "playlist.clear", input: never, result: null } | 
        { key: "scan.start", input: never, result: null },
    subscriptions: 
        { key: "scan.log", input: never, result: ScanEvent }
};

export type Song = { key: string | null; hash: string; songName: string }

export type LevelInfo = { _songName: string; _songSubName: string; _songAuthorName: string; _difficultyBeatmapSets: BeatMapSet[] }

export type Config = { mod_root: string | null; hash_cache_enabled: boolean }

export type ScanEvent = { Level: ScanResult } | { Playlist: ScanResult } | "Completed" | "Started"

export type BeatMap = { _difficulty: string; _difficultyRank: number; _beatmapFilename: string }

export type Playlist = { playlistTitle: string; playlistAuthor: string | null; playlistDescription: string | null; image: string | null; imageString: string | null; songs: Song[] }

/**
 * Struct to represent level.
 * Contains info of all difficulties.
 */
export type Level = { hash: string; info: LevelInfo }

export type ScanResult = { Success: { path: string } } | { Failed: { reason: string; path: string } }

export type BeatMapSet = { _difficultyBeatmaps: BeatMap[] }
